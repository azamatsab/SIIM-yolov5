[34m[1mtrain: [39m[22mScanning '/data/aza_s/SIIM/dataset/coco_format/labels/train.cache' for images and labels... 5067 found, 0 missing, 0 empty, 0 corrupted: 100%|â–ˆ| 5067/5067 [00:00<?, ?it/s]
[34m[1mval: [39m[22mScanning '/data/aza_s/SIIM/dataset/coco_format/labels/valid.cache' for images and labels... 1267 found, 0 missing, 0 empty, 0 corrupted: 100%|â–ˆâ–ˆâ–ˆ| 1267/1267 [00:00<?, ?it/s]
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 0., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 0., 0.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 0., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 0., 0.])
tensor([0., 0., 0., 0., 0.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 0., 1., 1., 1.])
tensor([0., 0., 0., 0., 0.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 0., 0., 0., 0.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 0., 0., 0., 0.])
tensor([0., 0., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 0., 0., 0.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 0., 0., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 0., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 0., 0.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
Plotting labels...
tensor([0., 0., 1., 0., 1.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 1.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 0., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 0., 0.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 1.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 0., 0., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 0., 0., 0.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 1.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 0., 0., 1., 1.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
Exception in thread Thread-14:
Traceback (most recent call last):
  File "/home/ubuntu/miniconda3/envs/temp/lib/python3.7/threading.py", line 926, in _bootstrap_inner
    self.run()
  File "/home/ubuntu/miniconda3/envs/temp/lib/python3.7/threading.py", line 870, in run
    self._target(*self._args, **self._kwargs)
  File "/home/ubuntu/miniconda3/envs/temp/lib/python3.7/site-packages/torch/utils/data/_utils/pin_memory.py", line 28, in _pin_memory_loop
    r = in_queue.get(timeout=MP_STATUS_CHECK_INTERVAL)
  File "/home/ubuntu/miniconda3/envs/temp/lib/python3.7/multiprocessing/queues.py", line 113, in get
    return _ForkingPickler.loads(res)
  File "/home/ubuntu/miniconda3/envs/temp/lib/python3.7/site-packages/torch/multiprocessing/reductions.py", line 289, in rebuild_storage_fd
    fd = df.detach()
  File "/home/ubuntu/miniconda3/envs/temp/lib/python3.7/multiprocessing/resource_sharer.py", line 57, in detach
    with _resource_sharer.get_connection(self._id) as conn:
  File "/home/ubuntu/miniconda3/envs/temp/lib/python3.7/multiprocessing/resource_sharer.py", line 87, in get_connection
    c = Client(address, authkey=process.current_process().authkey)
  File "/home/ubuntu/miniconda3/envs/temp/lib/python3.7/multiprocessing/connection.py", line 492, in Client
    c = SocketClient(address)
  File "/home/ubuntu/miniconda3/envs/temp/lib/python3.7/multiprocessing/connection.py", line 620, in SocketClient
    s.connect(address)
FileNotFoundError: [Errno 2] No such file or directory
Traceback (most recent call last):
  File "scripts/train.py", line 532, in <module>
    train(hyp, opt, device, tb_writer, wandb)
  File "scripts/train.py", line 208, in train
    plot_labels(labels, save_dir, loggers)
  File "./utils/plots.py", line 267, in plot_labels
    sns.pairplot(x, corner=True, diag_kind='auto', kind='hist', diag_kws=dict(bins=50), plot_kws=dict(pmax=0.9))
  File "/home/ubuntu/miniconda3/envs/temp/lib/python3.7/site-packages/seaborn/_decorators.py", line 46, in inner_f
    return f(**kwargs)
  File "/home/ubuntu/miniconda3/envs/temp/lib/python3.7/site-packages/seaborn/axisgrid.py", line 2019, in pairplot
    grid.map_diag(histplot, **diag_kws)
  File "/home/ubuntu/miniconda3/envs/temp/lib/python3.7/site-packages/seaborn/axisgrid.py", line 1402, in map_diag
    func(x=vector, **plot_kwargs)
  File "/home/ubuntu/miniconda3/envs/temp/lib/python3.7/site-packages/seaborn/distributions.py", line 1436, in histplot
    **kwargs,
  File "/home/ubuntu/miniconda3/envs/temp/lib/python3.7/site-packages/seaborn/distributions.py", line 561, in plot_univariate_histogram
    **artist_kws,
  File "/home/ubuntu/miniconda3/envs/temp/lib/python3.7/site-packages/matplotlib/__init__.py", line 1361, in inner
    return func(ax, *map(sanitize_sequence, args), **kwargs)
  File "/home/ubuntu/miniconda3/envs/temp/lib/python3.7/site-packages/matplotlib/axes/_axes.py", line 2371, in bar
    self.add_patch(r)
  File "/home/ubuntu/miniconda3/envs/temp/lib/python3.7/site-packages/matplotlib/axes/_base.py", line 2169, in add_patch
    p.set_clip_path(self.patch)
  File "/home/ubuntu/miniconda3/envs/temp/lib/python3.7/site-packages/matplotlib/artist.py", line 780, in set_clip_path
    path.get_transform())
  File "/home/ubuntu/miniconda3/envs/temp/lib/python3.7/site-packages/matplotlib/patches.py", line 273, in get_transform
    return self.get_patch_transform() + artist.Artist.get_transform(self)
  File "/home/ubuntu/miniconda3/envs/temp/lib/python3.7/site-packages/matplotlib/patches.py", line 780, in get_patch_transform
    bbox.x0, bbox.y0, self.angle))
  File "/home/ubuntu/miniconda3/envs/temp/lib/python3.7/site-packages/matplotlib/transforms.py", line 2002, in rotate_deg_around
    return self.translate(-x, -y).rotate_deg(degrees).translate(x, y)
  File "/home/ubuntu/miniconda3/envs/temp/lib/python3.7/site-packages/matplotlib/transforms.py", line 1980, in rotate_deg
    return self.rotate(math.radians(degrees))
  File "/home/ubuntu/miniconda3/envs/temp/lib/python3.7/site-packages/matplotlib/transforms.py", line 1968, in rotate
    self._mtx = np.dot(rotate_mtx, self._mtx)
  File "<__array_function__ internals>", line 6, in dot
KeyboardInterrupt
tensor([0., 0., 0., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 1., 1.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 0., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 0., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 1.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 0., 1., 1.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 0., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 0., 1., 0., 1.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 1.])
tensor([0., 0., 1., 0., 1.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 0., 0., 0., 0.])
tensor([0., 0., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 1.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 0., 1., 0., 1.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 1.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 1., 1.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 1., 1.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 1., 1.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 1., 1.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 0., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 1., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 1.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 0., 0., 1.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 1., 0., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 1., 0., 0.])
tensor([0., 0., 0., 1., 0.])
tensor([0., 0., 0., 1., 0.])